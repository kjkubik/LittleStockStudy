from polygon import RESTClient
import pandas as pd
from numpy import record
import datetime
import time
#import GetSMA
from config import stock_key

def ts_to_datetime(ts) -> str: return datetime.datetime.fromtimestamp(ts / 1000.0).strftime('%Y-%m-%d')

from_ = (datetime.datetime.now() - datetime.timedelta(days=365)).strftime('%Y-%m-%d')
to = datetime.datetime.now().strftime('%Y-%m-%d')
time_span = "day" # "minute"

def AccessPolygon():
    # INPUT
    tickers_df = pd.read_csv("resources/InputTickers.csv")
    #print(tickers_df.head())
    
    # OUTPUT
    output = open(f"resources/StockPrices.csv", "w")
    
    # HEADER RECORD
    record = f"Ticker,Date,Open,High,Low,Close,Volume,VolumeWeight,NumberOfTransactions\n"
    output.write(record)
    
    # Used to eliminate "429 Client Error: Too Many Requests for url"
    record_count = 1  
    
    # iterating through input stocks
    for record, row in tickers_df.iterrows():
        ticker =  row['Ticker']
        get_stock_price(output, stock_key, ticker, time_span, from_, to)
        record_count = record_count + 1
        
        # prevents client error 429
        if record_count > 5: 
            record_count = 1
            print(f"Wait one minute before retrieving next five stocks.")
            time.sleep(90) # Sleep for 62 seconds
    
    output.close()
    print("Get_Stock_Price has completed.")
    print("Boooo-yaaaaahhhh!\n")

def get_stock_price(output, client_key, ticker, time_span, from_, to):
    
    print(f"Retrieving {ticker} data.") 
    with RESTClient(client_key) as client:
        
        # for more information on calling this go to Polygon website
        resp = client.stocks_equities_aggregates(ticker, 1, time_span, from_, to, unadjusted=False)
        
        for result in resp.results:
            dt = ts_to_datetime(result["t"])
            record = f"{ticker},{dt},{result['o']},{result['h']},{result['l']},{result['c']},{result['v']}," \
                     f"{result['vw']},{result['n']}\n"
            output.write(record)
    
# MAIN
if __name__ == '__main__':
    print('I am here')
    # Access the API giving you stock prices and write to file (soon we'll get these to a table :O)
    AccessPolygon()
    # Get SMAs for each stock 
    exec(open("source/GetSMA").read())